From 6e5831ab4549dcdc19dfb72d001f7a185db9d927 Mon Sep 17 00:00:00 2001
From: Yat Ho <lagoho7@gmail.com>
Date: Mon, 6 Jan 2025 08:19:30 +0800
Subject: [PATCH] refactor: remove builtin and asm popcount implementation

---
 libtransmission/tr-popcount.h | 56 -----------------------------------
 1 file changed, 56 deletions(-)

diff --git a/libtransmission/tr-popcount.h b/libtransmission/tr-popcount.h
index 638c5d758..3189618f0 100644
--- a/libtransmission/tr-popcount.h
+++ b/libtransmission/tr-popcount.h
@@ -58,62 +58,6 @@ struct tr_popcnt
         unsigned_T unsigned_v = static_cast<unsigned_T>(v);
         return static_cast<unsigned>(std::popcount(unsigned_v));
     }
-
-#elif defined(TR_HAVE_BUILTIN_POPCOUNT)
-    /* Use __builtin as opposed to straight assembly to avoid any
-       strain the latter puts on the optimized. */
-    static inline unsigned count(T v)
-    {
-        /* Make sure we know how to find that right __builtin_popcount. */
-        static_assert(
-            sizeof(T) == sizeof(long long) || sizeof(T) == sizeof(long) || sizeof(T) <= sizeof(int),
-            "Unknown type size!");
-
-        if constexpr (sizeof(T) == sizeof(long long))
-        {
-            return __builtin_popcountll(v);
-        }
-        else if constexpr (sizeof(T) == sizeof(long))
-        {
-            return __builtin_popcountl(v);
-        }
-        else if constexpr (sizeof(T) == sizeof(int))
-        {
-            return __builtin_popcount(v);
-        }
-        else
-        {
-            static_assert(sizeof(T) < sizeof(int));
-            /* Need to avoid sign extension. */
-            unsigned_T unsigned_v = static_cast<unsigned_T>(v);
-            return __builtin_popcount(unsigned_v);
-        }
-    }
-#elif defined(TR_HAVE_ASM_POPCNT)
-    /* raw assembly. This prohibits constexpr so may be worth dropping if there
-     * is need for count() to be constexpr. */
-    static inline unsigned count(T v)
-    {
-        unsigned_T unsigned_v = static_cast<unsigned_T>(v);
-        if constexpr (sizeof(T) >= sizeof(uint32_t))
-        {
-            /* Make sure dst == src to avoid false dependency on many x86
-             * implementations. */
-            __asm__ __volatile__("popcnt %1, %0" : "=r"(unsigned_v) : "0"(unsigned_v) : "cc");
-
-            return unsigned_v;
-        }
-        else
-        {
-            /* No popcnt instruct for register size < 32. */
-            uint32_t unsigned_v32 = static_cast<uint32_t>(unsigned_v);
-
-            /* Make sure dst == src to avoid false dependency on many x86
-             * implementations. */
-            __asm__ __volatile__("popcnt %1, %0" : "=r"(unsigned_v32) : "0"(unsigned_v32) : "cc");
-            return unsigned_v32;
-        }
-    }
 #else
     /* Generic implementation. */
     static inline unsigned count(T v)
-- 
2.43.0
